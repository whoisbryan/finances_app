name: CI/CD Finanzas App

on:
  push:
    branches: [main]
  workflow_dispatch: 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🔍 Clonar repo
        uses: actions/checkout@v3

      - name: 🔧 Obtener short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: 🐳 Login a DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🐍 Build backend
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/finanzas-backend:$SHORT_SHA ./backend

      - name: ⚛️ Build frontend
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/finanzas-frontend:$SHORT_SHA ./frontend

      - name: 🚀 Push imágenes
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/finanzas-backend:$SHORT_SHA
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/finanzas-frontend:$SHORT_SHA

      - name: 🖥️ Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            HOSTNAME: ${{ secrets.HOST }}
            USER_NAME: ${{ vars.USER }}
      
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ls
          scp -o StrictHostKeyChecking=no -i private_key docker-compose.tpl.yml ${USER_NAME}@${HOSTNAME}:/home/${USER_NAME}/deploy-finanzas/
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} "
            export TAG=${SHORT_SHA};
            export DB_USER='${{ secrets.DB_USER }}';
            export DB_PASSWORD='${{ secrets.DB_PASSWORD }}';
            export DB_NAME='${{ secrets.DB_NAME }}';
            cd /home/${USER_NAME}/deploy-finanzas;
            envsubst < docker-compose.tpl.yml > docker-compose.yml;
            docker compose down
            docker compose pull;
            docker compose up -d
          "